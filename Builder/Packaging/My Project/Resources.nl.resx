<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_CitoTesterServerPackageManager_DownloadLengthInvalid" xml:space="preserve">
    <value>De gedownloade package is groter dan verwacht!</value>
  </data>
  <data name="Error_CitoTesterServerPackageManager_DownloadNotSame" xml:space="preserve">
    <value>De gedownloade package is niet anders dan op de server!</value>
  </data>
  <data name="Error_CitoTesterServerPackageManager_DownloadPackage" xml:space="preserve">
    <value>Er is een fout opgetreden bij het ophalen van het package van de server.</value>
  </data>
  <data name="Error_Manifest" xml:space="preserve">
    <value>Fout in het manifest, [{0}] bestand [{1}] bevat een referentie naar een niet bestaand bestand. Dit betekent waarschijnlijk een inconsist manifest!</value>
  </data>
  <data name="Error_ManifestResourceHandler_ClearCache_CacheDirectoryError" xml:space="preserve">
    <value>Fout: Cachedirectory kon niet worden verwijderd.</value>
  </data>
  <data name="Error_ManifestResourceManager_CannotGetResource" xml:space="preserve">
    <value>Error: Het bestand '{0}' kon niet worden opgehaald. De volgende fout is opgetreden:: {1}</value>
  </data>
  <data name="Error_ManifestResourceManager_CopyMediaToCache_ErrorWhileWritingToCache" xml:space="preserve">
    <value>Fout: Bestand kon niet weg geschreven worden naar de cache</value>
  </data>
  <data name="Error_ManifestResourceManager_EmptyStream" xml:space="preserve">
    <value>Fout: Bestand met de naam '{0}' geeft een lege stream terug.</value>
  </data>
  <data name="Error_PackageManager_GetStream_UriNotRelative" xml:space="preserve">
    <value>Fout: Uri is niet relatief</value>
  </data>
  <data name="Error_PackageManager_GetStreamRelativeUri_UriNotSet" xml:space="preserve">
    <value>Fout: Uri parameter is niet gezet</value>
  </data>
  <data name="Error_ResourceManifest_Load_StreamNotSet" xml:space="preserve">
    <value>Fout: parameter 'manifestStream' is leeg</value>
  </data>
  <data name="Error_UriNotSet" xml:space="preserve">
    <value>Fout: Uri parameter is leeg</value>
  </data>
  <data name="Error_WhilePublishingResource" xml:space="preserve">
    <value>Er is een fout opgetreden bij het publiceren van het volgende bestand: '{0}'</value>
  </data>
  <data name="Error_WhileImportingResource" xml:space="preserve">
    <value>Er is een fout opgetreden bij het Importeren van het volgende bestand: '{0}'</value>
  </data>
  <data name="FileProtocolHandler_PutStream_FailedToWrite" xml:space="preserve">
    <value>Het encrypte bestand kon niet worden toegeveogd aan de package.</value>
  </data>
  <data name="GettingResource0" xml:space="preserve">
    <value>Bezig met ophalen van bestand {0}...</value>
  </data>
  <data name="ProcessingResource" xml:space="preserve">
    <value>Bezig met het verwerken van bestand '{0}'...</value>
  </data>
  <data name="ProcessingResource0" xml:space="preserve">
    <value>Bezig met het verwerken van bestand '{0}'...</value>
  </data>
  <data name="ResourceManifest_ResourceContainerFileDoesNotExist" xml:space="preserve">
    <value>Resource container bestand '{0}' bestaat niet.</value>
  </data>
  <data name="ResourceManifest_ResourceContainerSchemeIsNotDefined" xml:space="preserve">
    <value>Resource container schema '{0}' is niet gedefiniëerd.</value>
  </data>
  <data name="ResourceManifest_ResourceFileNotFound" xml:space="preserve">
    <value>Bestand '{0}' niet gevonden.</value>
  </data>
  <data name="Trace_ManifestResourceManager_ClearCache_CacheCleared" xml:space="preserve">
    <value>Cache met bestanden is geleegd.</value>
  </data>
  <data name="Trace_ManifestResourceManager_ClearCache_CachedirNotFoundOrNoEntriesInCache" xml:space="preserve">
    <value>Cache map niet gevonden of geen bestanden gevonden in de cache</value>
  </data>
  <data name="Trace_ManifestResourceManager_CopyMediaToCache_AddedToCache" xml:space="preserve">
    <value>Bestand '{0}' is toegevoegd aan de cache.</value>
  </data>
  <data name="Trace_ManifestResourceManager_CopyMediaToCache_CopyResources" xml:space="preserve">
    <value>Bezig met kopiëren van {0} bestanden aan de cache.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetFromCache_GetResourceStream" xml:space="preserve">
    <value>Bezig met het ophalen van de resourcestream.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetFromCache_ProcessingStream" xml:space="preserve">
    <value>Bezig met het verwerken van deresourcestream, stream is {0} bytes groot.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetResource_FoundInCache" xml:space="preserve">
    <value>Het bestand '{0}' is gevonden in de cache en zal worden opgehaald.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetResource_GetResource" xml:space="preserve">
    <value>Bezig met het ophalen van het bestand:  '{0}'.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetResource_NotFoundInCache" xml:space="preserve">
    <value>Het bestand: '{0}' staat niet in de cache en zal worden opgehaald uit de package.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetResourceAndProcessStream_GetResourceStream" xml:space="preserve">
    <value>Bezig met het ophalen van de resourcestream.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetResourceAndProcessStream_ProcessingStream" xml:space="preserve">
    <value>Bezig met het verwerken van de resource stream, stream is {0} bytes groot.</value>
  </data>
  <data name="Trace_ManifestResourceManager_GetTypedResource_GetResource" xml:space="preserve">
    <value>Bezig met het ophalen van het bestand '{0}' van het type '{1}'.</value>
  </data>
  <data name="WaitingForPackageDownload" xml:space="preserve">
    <value>Wachten op package download...</value>
  </data>
  <data name="ExportManager_UpdateManifest" xml:space="preserve">
    <value>Bezig met het bijwerken van het manifest ...</value>
  </data>
</root>