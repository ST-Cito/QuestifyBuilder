<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Cinch="clr-namespace:Cinch;assembly=Cinch.WPF"
                    xmlns:TCntMdl="clr-namespace:Cito.Tester.ContentModel;assembly=Cito.Tester.ContentModel"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:dataTemplates1="clr-namespace:Questify.Builder.UI.Wpf.Presentation.ItemEditor.Views.ScoreEditors.DataTemplates"
                    xmlns:routedCommand="clr-namespace:Questify.Builder.UI.Wpf.Presentation.ItemEditor.Views.ScoreEditors.RoutedCommand"
                    xmlns:scoreEditors="clr-namespace:Questify.Builder.UI.Wpf.Presentation.ItemEditor.Views.ScoreEditors"
                    xmlns:markupExtensions="clr-namespace:Questify.Builder.UI.Wpf.Presentation.MarkupExtensions"
                    xmlns:controls1="clr-namespace:Questify.Builder.UI.Wpf.Controls">

    <dataTemplates1:SeparatorColumnTemplateSelector x:Key="SeperatorSelector" />
    <dataTemplates1:OperatorEditorSelector x:Key="OperatorEditorSelector" />
    <dataTemplates1:ScoreViewerSelector x:Key="ViewerSelector" />
    <dataTemplates1:ScoreEditorSelector x:Key="EditorSelector" />
    <BooleanToVisibilityConverter x:Key="BoolToVis"/>

    <DataTemplate x:Key="KeyFindingTemplate">
        <Grid Margin="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <routedCommand:Mvvm.CommandBindings>
                <routedCommand:MvvmCommandBindingCollection>
                    <routedCommand:MvvmCommandBinding Command="scoreEditors:ScoreEditorCommands.GroupInteractions" 
                                           Target="{Binding GroupInteractionsCommand}" CanExecuteChangedSuggestRequery="False" />
                    <routedCommand:MvvmCommandBinding Command="scoreEditors:ScoreEditorCommands.Ungroup" 
                                           Target="{Binding UngroupCommand}" CanExecuteChangedSuggestRequery="False" />
                    <routedCommand:MvvmCommandBinding Command="scoreEditors:ScoreEditorCommands.RemoveSet" 
                                           Target="{Binding RemoveSetCommand}" CanExecuteChangedSuggestRequery="False" />
                </routedCommand:MvvmCommandBindingCollection>
            </routedCommand:Mvvm.CommandBindings>

            <!--Row 0 [Scoring Method]-->
            <StackPanel Orientation="Horizontal" Grid.Row="0" Visibility="{Binding ShowSelectedScoringMethod, Converter={StaticResource BoolToVis}}" >
                <Label Content="{StaticResource ItemEditor.ScoreEditor.ScoreMethod}"></Label>
                <ComboBox ItemsSource="{markupExtensions:Enum TCntMdl:EnumScoringMethod}" SelectedValuePath="Item1" DisplayMemberPath="Item2" SelectedValue="{Binding SelectedScoringMethod.DataValue}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2,0,0"  />
            </StackPanel>

            <!--Row 1 [BlockGrid]-->
            <StackPanel Grid.Row="1" FocusManager.FocusedElement="{Binding ElementName=BlockGrid1}">
                <controls1:BlockGrid x:Name="BlockGrid1" ItemsSource="{Binding BlockGridData}" EnableFirstRowSelect="True" FirstRowCellIndexToFocus="2">
                    <i:Interaction.Behaviors>
                        <scoreEditors:BlockGridSelectedItemsBehaviour SelectedItems="{Binding SelectedBlockRows.DataValue}"/>
                    </i:Interaction.Behaviors>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="CanInsertBlockGridElement">
                            <Cinch:EventToCommandTrigger Command="{Binding CanInsertBlockGridElementEventCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="InsertBlockGridElement">
                            <Cinch:EventToCommandTrigger Command="{Binding InsertBlockGridElementEventCommand}" />
                        </i:EventTrigger>

                        <i:EventTrigger EventName="CanDeleteBlockGridElement">
                            <Cinch:EventToCommandTrigger Command="{Binding CanDeleteBlockGridElementEventCommand}" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="DeleteBlockGridElement">
                            <Cinch:EventToCommandTrigger Command="{Binding DeleteBlockGridElementEventCommand}" />
                        </i:EventTrigger>

                    </i:Interaction.Triggers>

                    <controls1:BlockGrid.Columns>

                        <controls1:BlockGridCellTextColumn Header="{StaticResource ItemEditor.ScoreEditor.FieldNameColumnHeaderText}" Width="160" Binding="{Binding Caption}" IsReadOnly="True">
                            <controls1:BlockGridCellTextColumn.CellStyle>
                                <Style TargetType="controls1:BlockGridCell" BasedOn="{StaticResource BlockGridCellStyle}">
                                    <Setter Property="ToolTip" Value="{Binding Caption}" />
                                </Style>
                            </controls1:BlockGridCellTextColumn.CellStyle>
                        </controls1:BlockGridCellTextColumn>

                        <controls1:BlockGridCellTemplateColumn 
										Header="{StaticResource ItemEditor.ScoreEditor.OperatorColumnHeaderText}" 
										Width="100" 
										CellTemplate="{StaticResource DefaultOperatorEditor}" 
										CellEditingTemplateSelector="{StaticResource OperatorEditorSelector}">
                            <controls1:BlockGridCellTemplateColumn.CellStyle>
                                <Style TargetType="controls1:BlockGridCell" BasedOn="{StaticResource BlockGridCellStyle}" />
                            </controls1:BlockGridCellTemplateColumn.CellStyle>
                        </controls1:BlockGridCellTemplateColumn>

                        <controls1:BlockGridCellTemplateColumn Header="{StaticResource ItemEditor.ScoreEditor.ValueColumnHeaderText}" Width="150" 
																	CellTemplateSelector="{StaticResource ViewerSelector}" 
																	CellEditingTemplateSelector="{StaticResource EditorSelector}">
                            <controls1:BlockGridCellTemplateColumn.CellStyle>
                                <Style TargetType="controls1:BlockGridCell" BasedOn="{StaticResource BlockGridCellStyle}" />
                            </controls1:BlockGridCellTemplateColumn.CellStyle>
                        </controls1:BlockGridCellTemplateColumn>
                        
                        <controls1:BlockGridSeparatorColumn Width="55" SeparatorTemplateSelector="{StaticResource SeperatorSelector}" />

                    </controls1:BlockGrid.Columns>
                   
                </controls1:BlockGrid>
            </StackPanel>
        </Grid>
    </DataTemplate>

</ResourceDictionary>