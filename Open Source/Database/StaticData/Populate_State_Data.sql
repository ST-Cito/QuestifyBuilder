--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com); adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

SET IDENTITY_INSERT [dbo].[state] ON

--Are states present? If so, do nothing!
DECLARE @StCnt int
SELECT @StCnt = (select COUNT(*) from [dbo].[State]  ) 
IF @StCnt = 0
BEGIN

MERGE INTO [dbo].[state] AS Target
USING (VALUES
  (1,'In development','In development',NULL)
 ,(2,'Done','Done',NULL)
 ,(3,'Retired','Retired',NULL)
) AS Source ([stateId],[name],[title],[description])
ON (Target.[stateId] = Source.[stateId])
WHEN MATCHED AND (
	NULLIF(Source.[name], Target.[name]) IS NOT NULL OR NULLIF(Target.[name], Source.[name]) IS NOT NULL OR 
	NULLIF(Source.[title], Target.[title]) IS NOT NULL OR NULLIF(Target.[title], Source.[title]) IS NOT NULL OR 
	NULLIF(Source.[description], Target.[description]) IS NOT NULL OR NULLIF(Target.[description], Source.[description]) IS NOT NULL) THEN
 UPDATE SET
 [name] = Source.[name], 
[title] = Source.[title], 
[description] = Source.[description]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([stateId],[name],[title],[description])
 VALUES(Source.[stateId],Source.[name],Source.[title],Source.[description])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

END

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [dbo].[state]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[dbo].[state] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [dbo].[state] OFF
GO
SET NOCOUNT OFF
GO