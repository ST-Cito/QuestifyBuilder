--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com); adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

--Are state actions present? If so, do nothing!
DECLARE @SACnt int
SELECT @SACnt = (select COUNT(*) from [dbo].[StateAction]  ) 
IF @SACnt = 0
BEGIN

MERGE INTO [dbo].[stateaction] AS Target
USING (VALUES
  ('resourceediting',1,1)
 ,('selectable',1,1)
 ,('publication',2,1)
 ,('selectable',2,1)
 ,('publication',3,1)
 ,('resourceediting',3,2)
 ,('selectable',3,2)
 ,('publication',1,3)
 ,('resourceediting',2,3)
) AS Source ([target],[stateId],[actionId])
ON (Target.[actionId] = Source.[actionId] AND Target.[stateId] = Source.[stateId] AND Target.[target] = Source.[target])
WHEN NOT MATCHED BY TARGET THEN
 INSERT([target],[stateId],[actionId])
 VALUES(Source.[target],Source.[stateId],Source.[actionId])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

END

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [dbo].[stateaction]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[dbo].[stateaction] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET NOCOUNT OFF
GO
