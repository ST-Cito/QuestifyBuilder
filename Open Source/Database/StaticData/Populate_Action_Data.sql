--MERGE generated by 'sp_generate_merge' stored procedure, Version 0.93
--Originally by Vyas (http://vyaskn.tripod.com); adapted for SQL Server 2008/2012 by Daniel Nolan (http://danere.com)

SET NOCOUNT ON

SET IDENTITY_INSERT [dbo].[action] ON

--Are actions present? If so, do nothing!
DECLARE @ActnCnt int
SELECT @ActnCnt = (select COUNT(*) from [dbo].[Action]  ) 
IF @ActnCnt = 0
BEGIN

MERGE INTO [dbo].[action] AS Target
USING (VALUES
  (1,'permit','permit')
 ,(2,'prohibit','prohibit')
 ,(3,'warn','warn')
 ,(4,'incrementVersion','incrementVersion')
) AS Source ([actionId],[name],[title])
ON (Target.[actionId] = Source.[actionId])
WHEN MATCHED AND (
	NULLIF(Source.[name], Target.[name]) IS NOT NULL OR NULLIF(Target.[name], Source.[name]) IS NOT NULL OR 
	NULLIF(Source.[title], Target.[title]) IS NOT NULL OR NULLIF(Target.[title], Source.[title]) IS NOT NULL) THEN
 UPDATE SET
 [name] = Source.[name], 
[title] = Source.[title]
WHEN NOT MATCHED BY TARGET THEN
 INSERT([actionId],[name],[title])
 VALUES(Source.[actionId],Source.[name],Source.[title])
WHEN NOT MATCHED BY SOURCE THEN 
 DELETE;

END

GO
DECLARE @mergeError int
 , @mergeCount int
SELECT @mergeError = @@ERROR, @mergeCount = @@ROWCOUNT
IF @mergeError != 0
 BEGIN
 PRINT 'ERROR OCCURRED IN MERGE FOR [dbo].[action]. Rows affected: ' + CAST(@mergeCount AS VARCHAR(100)); -- SQL should always return zero rows affected
 END
ELSE
 BEGIN
 PRINT '[dbo].[action] rows affected by MERGE: ' + CAST(@mergeCount AS VARCHAR(100));
 END
GO

SET IDENTITY_INSERT [dbo].[action] OFF
GO
SET NOCOUNT OFF
GO
